//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace AITLibrary.mediaWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebServiceMediaSoap", Namespace="http://tempuri.org/")]
    public partial class WebServiceMedia : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback showAllMediaOperationCompleted;
        
        private System.Threading.SendOrPostCallback listMediaByYearOperationCompleted;
        
        private System.Threading.SendOrPostCallback listMediaByGenreOperationCompleted;
        
        private System.Threading.SendOrPostCallback listMediaByTitleOperationCompleted;
        
        private System.Threading.SendOrPostCallback addNewMediaOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateMediaOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMediaOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllGenreOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllDirectorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllLanguageOperationCompleted;
        
        private System.Threading.SendOrPostCallback addGenreOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateGenreOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteGenreOperationCompleted;
        
        private System.Threading.SendOrPostCallback addLanguageOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateLanguageOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteLanguageOperationCompleted;
        
        private System.Threading.SendOrPostCallback addDirectorOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateDirectorOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteDirectorOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebServiceMedia() {
            this.Url = global::AITLibrary.Properties.Settings.Default.AITLibrary_mediaWebService_WebServiceMedia;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event showAllMediaCompletedEventHandler showAllMediaCompleted;
        
        /// <remarks/>
        public event listMediaByYearCompletedEventHandler listMediaByYearCompleted;
        
        /// <remarks/>
        public event listMediaByGenreCompletedEventHandler listMediaByGenreCompleted;
        
        /// <remarks/>
        public event listMediaByTitleCompletedEventHandler listMediaByTitleCompleted;
        
        /// <remarks/>
        public event addNewMediaCompletedEventHandler addNewMediaCompleted;
        
        /// <remarks/>
        public event updateMediaCompletedEventHandler updateMediaCompleted;
        
        /// <remarks/>
        public event DeleteMediaCompletedEventHandler DeleteMediaCompleted;
        
        /// <remarks/>
        public event GetAllGenreCompletedEventHandler GetAllGenreCompleted;
        
        /// <remarks/>
        public event GetAllDirectorCompletedEventHandler GetAllDirectorCompleted;
        
        /// <remarks/>
        public event GetAllLanguageCompletedEventHandler GetAllLanguageCompleted;
        
        /// <remarks/>
        public event addGenreCompletedEventHandler addGenreCompleted;
        
        /// <remarks/>
        public event updateGenreCompletedEventHandler updateGenreCompleted;
        
        /// <remarks/>
        public event deleteGenreCompletedEventHandler deleteGenreCompleted;
        
        /// <remarks/>
        public event addLanguageCompletedEventHandler addLanguageCompleted;
        
        /// <remarks/>
        public event updateLanguageCompletedEventHandler updateLanguageCompleted;
        
        /// <remarks/>
        public event deleteLanguageCompletedEventHandler deleteLanguageCompleted;
        
        /// <remarks/>
        public event addDirectorCompletedEventHandler addDirectorCompleted;
        
        /// <remarks/>
        public event updateDirectorCompletedEventHandler updateDirectorCompleted;
        
        /// <remarks/>
        public event deleteDirectorCompletedEventHandler deleteDirectorCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/showAllMedia", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable showAllMedia() {
            object[] results = this.Invoke("showAllMedia", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void showAllMediaAsync() {
            this.showAllMediaAsync(null);
        }
        
        /// <remarks/>
        public void showAllMediaAsync(object userState) {
            if ((this.showAllMediaOperationCompleted == null)) {
                this.showAllMediaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnshowAllMediaOperationCompleted);
            }
            this.InvokeAsync("showAllMedia", new object[0], this.showAllMediaOperationCompleted, userState);
        }
        
        private void OnshowAllMediaOperationCompleted(object arg) {
            if ((this.showAllMediaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.showAllMediaCompleted(this, new showAllMediaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/listMediaByYear", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable listMediaByYear(int year) {
            object[] results = this.Invoke("listMediaByYear", new object[] {
                        year});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void listMediaByYearAsync(int year) {
            this.listMediaByYearAsync(year, null);
        }
        
        /// <remarks/>
        public void listMediaByYearAsync(int year, object userState) {
            if ((this.listMediaByYearOperationCompleted == null)) {
                this.listMediaByYearOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistMediaByYearOperationCompleted);
            }
            this.InvokeAsync("listMediaByYear", new object[] {
                        year}, this.listMediaByYearOperationCompleted, userState);
        }
        
        private void OnlistMediaByYearOperationCompleted(object arg) {
            if ((this.listMediaByYearCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listMediaByYearCompleted(this, new listMediaByYearCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/listMediaByGenre", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable listMediaByGenre(string genre) {
            object[] results = this.Invoke("listMediaByGenre", new object[] {
                        genre});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void listMediaByGenreAsync(string genre) {
            this.listMediaByGenreAsync(genre, null);
        }
        
        /// <remarks/>
        public void listMediaByGenreAsync(string genre, object userState) {
            if ((this.listMediaByGenreOperationCompleted == null)) {
                this.listMediaByGenreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistMediaByGenreOperationCompleted);
            }
            this.InvokeAsync("listMediaByGenre", new object[] {
                        genre}, this.listMediaByGenreOperationCompleted, userState);
        }
        
        private void OnlistMediaByGenreOperationCompleted(object arg) {
            if ((this.listMediaByGenreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listMediaByGenreCompleted(this, new listMediaByGenreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/listMediaByTitle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable listMediaByTitle(string title) {
            object[] results = this.Invoke("listMediaByTitle", new object[] {
                        title});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void listMediaByTitleAsync(string title) {
            this.listMediaByTitleAsync(title, null);
        }
        
        /// <remarks/>
        public void listMediaByTitleAsync(string title, object userState) {
            if ((this.listMediaByTitleOperationCompleted == null)) {
                this.listMediaByTitleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistMediaByTitleOperationCompleted);
            }
            this.InvokeAsync("listMediaByTitle", new object[] {
                        title}, this.listMediaByTitleOperationCompleted, userState);
        }
        
        private void OnlistMediaByTitleOperationCompleted(object arg) {
            if ((this.listMediaByTitleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listMediaByTitleCompleted(this, new listMediaByTitleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/addNewMedia", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int addNewMedia(string title, int genre, int director, int language, int publishYear, decimal budget) {
            object[] results = this.Invoke("addNewMedia", new object[] {
                        title,
                        genre,
                        director,
                        language,
                        publishYear,
                        budget});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addNewMediaAsync(string title, int genre, int director, int language, int publishYear, decimal budget) {
            this.addNewMediaAsync(title, genre, director, language, publishYear, budget, null);
        }
        
        /// <remarks/>
        public void addNewMediaAsync(string title, int genre, int director, int language, int publishYear, decimal budget, object userState) {
            if ((this.addNewMediaOperationCompleted == null)) {
                this.addNewMediaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddNewMediaOperationCompleted);
            }
            this.InvokeAsync("addNewMedia", new object[] {
                        title,
                        genre,
                        director,
                        language,
                        publishYear,
                        budget}, this.addNewMediaOperationCompleted, userState);
        }
        
        private void OnaddNewMediaOperationCompleted(object arg) {
            if ((this.addNewMediaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addNewMediaCompleted(this, new addNewMediaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateMedia", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int updateMedia(int mediaID, string title, int genre, int director, int language, int publishYear, decimal budget) {
            object[] results = this.Invoke("updateMedia", new object[] {
                        mediaID,
                        title,
                        genre,
                        director,
                        language,
                        publishYear,
                        budget});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void updateMediaAsync(int mediaID, string title, int genre, int director, int language, int publishYear, decimal budget) {
            this.updateMediaAsync(mediaID, title, genre, director, language, publishYear, budget, null);
        }
        
        /// <remarks/>
        public void updateMediaAsync(int mediaID, string title, int genre, int director, int language, int publishYear, decimal budget, object userState) {
            if ((this.updateMediaOperationCompleted == null)) {
                this.updateMediaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateMediaOperationCompleted);
            }
            this.InvokeAsync("updateMedia", new object[] {
                        mediaID,
                        title,
                        genre,
                        director,
                        language,
                        publishYear,
                        budget}, this.updateMediaOperationCompleted, userState);
        }
        
        private void OnupdateMediaOperationCompleted(object arg) {
            if ((this.updateMediaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateMediaCompleted(this, new updateMediaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteMedia", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteMedia(int mediaID) {
            object[] results = this.Invoke("DeleteMedia", new object[] {
                        mediaID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteMediaAsync(int mediaID) {
            this.DeleteMediaAsync(mediaID, null);
        }
        
        /// <remarks/>
        public void DeleteMediaAsync(int mediaID, object userState) {
            if ((this.DeleteMediaOperationCompleted == null)) {
                this.DeleteMediaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMediaOperationCompleted);
            }
            this.InvokeAsync("DeleteMedia", new object[] {
                        mediaID}, this.DeleteMediaOperationCompleted, userState);
        }
        
        private void OnDeleteMediaOperationCompleted(object arg) {
            if ((this.DeleteMediaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMediaCompleted(this, new DeleteMediaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllGenre", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PairModel[] GetAllGenre() {
            object[] results = this.Invoke("GetAllGenre", new object[0]);
            return ((PairModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllGenreAsync() {
            this.GetAllGenreAsync(null);
        }
        
        /// <remarks/>
        public void GetAllGenreAsync(object userState) {
            if ((this.GetAllGenreOperationCompleted == null)) {
                this.GetAllGenreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllGenreOperationCompleted);
            }
            this.InvokeAsync("GetAllGenre", new object[0], this.GetAllGenreOperationCompleted, userState);
        }
        
        private void OnGetAllGenreOperationCompleted(object arg) {
            if ((this.GetAllGenreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllGenreCompleted(this, new GetAllGenreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllDirector", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PairModel[] GetAllDirector() {
            object[] results = this.Invoke("GetAllDirector", new object[0]);
            return ((PairModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllDirectorAsync() {
            this.GetAllDirectorAsync(null);
        }
        
        /// <remarks/>
        public void GetAllDirectorAsync(object userState) {
            if ((this.GetAllDirectorOperationCompleted == null)) {
                this.GetAllDirectorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllDirectorOperationCompleted);
            }
            this.InvokeAsync("GetAllDirector", new object[0], this.GetAllDirectorOperationCompleted, userState);
        }
        
        private void OnGetAllDirectorOperationCompleted(object arg) {
            if ((this.GetAllDirectorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllDirectorCompleted(this, new GetAllDirectorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllLanguage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PairModel[] GetAllLanguage() {
            object[] results = this.Invoke("GetAllLanguage", new object[0]);
            return ((PairModel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllLanguageAsync() {
            this.GetAllLanguageAsync(null);
        }
        
        /// <remarks/>
        public void GetAllLanguageAsync(object userState) {
            if ((this.GetAllLanguageOperationCompleted == null)) {
                this.GetAllLanguageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllLanguageOperationCompleted);
            }
            this.InvokeAsync("GetAllLanguage", new object[0], this.GetAllLanguageOperationCompleted, userState);
        }
        
        private void OnGetAllLanguageOperationCompleted(object arg) {
            if ((this.GetAllLanguageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllLanguageCompleted(this, new GetAllLanguageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/addGenre", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int addGenre(string genreName) {
            object[] results = this.Invoke("addGenre", new object[] {
                        genreName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addGenreAsync(string genreName) {
            this.addGenreAsync(genreName, null);
        }
        
        /// <remarks/>
        public void addGenreAsync(string genreName, object userState) {
            if ((this.addGenreOperationCompleted == null)) {
                this.addGenreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddGenreOperationCompleted);
            }
            this.InvokeAsync("addGenre", new object[] {
                        genreName}, this.addGenreOperationCompleted, userState);
        }
        
        private void OnaddGenreOperationCompleted(object arg) {
            if ((this.addGenreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addGenreCompleted(this, new addGenreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateGenre", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int updateGenre(string genreName, int genreID) {
            object[] results = this.Invoke("updateGenre", new object[] {
                        genreName,
                        genreID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void updateGenreAsync(string genreName, int genreID) {
            this.updateGenreAsync(genreName, genreID, null);
        }
        
        /// <remarks/>
        public void updateGenreAsync(string genreName, int genreID, object userState) {
            if ((this.updateGenreOperationCompleted == null)) {
                this.updateGenreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateGenreOperationCompleted);
            }
            this.InvokeAsync("updateGenre", new object[] {
                        genreName,
                        genreID}, this.updateGenreOperationCompleted, userState);
        }
        
        private void OnupdateGenreOperationCompleted(object arg) {
            if ((this.updateGenreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateGenreCompleted(this, new updateGenreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteGenre", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int deleteGenre(int genreID) {
            object[] results = this.Invoke("deleteGenre", new object[] {
                        genreID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteGenreAsync(int genreID) {
            this.deleteGenreAsync(genreID, null);
        }
        
        /// <remarks/>
        public void deleteGenreAsync(int genreID, object userState) {
            if ((this.deleteGenreOperationCompleted == null)) {
                this.deleteGenreOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteGenreOperationCompleted);
            }
            this.InvokeAsync("deleteGenre", new object[] {
                        genreID}, this.deleteGenreOperationCompleted, userState);
        }
        
        private void OndeleteGenreOperationCompleted(object arg) {
            if ((this.deleteGenreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteGenreCompleted(this, new deleteGenreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/addLanguage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int addLanguage(string languageName) {
            object[] results = this.Invoke("addLanguage", new object[] {
                        languageName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addLanguageAsync(string languageName) {
            this.addLanguageAsync(languageName, null);
        }
        
        /// <remarks/>
        public void addLanguageAsync(string languageName, object userState) {
            if ((this.addLanguageOperationCompleted == null)) {
                this.addLanguageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddLanguageOperationCompleted);
            }
            this.InvokeAsync("addLanguage", new object[] {
                        languageName}, this.addLanguageOperationCompleted, userState);
        }
        
        private void OnaddLanguageOperationCompleted(object arg) {
            if ((this.addLanguageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addLanguageCompleted(this, new addLanguageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateLanguage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int updateLanguage(string languageName, int languageID) {
            object[] results = this.Invoke("updateLanguage", new object[] {
                        languageName,
                        languageID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void updateLanguageAsync(string languageName, int languageID) {
            this.updateLanguageAsync(languageName, languageID, null);
        }
        
        /// <remarks/>
        public void updateLanguageAsync(string languageName, int languageID, object userState) {
            if ((this.updateLanguageOperationCompleted == null)) {
                this.updateLanguageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateLanguageOperationCompleted);
            }
            this.InvokeAsync("updateLanguage", new object[] {
                        languageName,
                        languageID}, this.updateLanguageOperationCompleted, userState);
        }
        
        private void OnupdateLanguageOperationCompleted(object arg) {
            if ((this.updateLanguageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateLanguageCompleted(this, new updateLanguageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteLanguage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int deleteLanguage(int languageID) {
            object[] results = this.Invoke("deleteLanguage", new object[] {
                        languageID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteLanguageAsync(int languageID) {
            this.deleteLanguageAsync(languageID, null);
        }
        
        /// <remarks/>
        public void deleteLanguageAsync(int languageID, object userState) {
            if ((this.deleteLanguageOperationCompleted == null)) {
                this.deleteLanguageOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteLanguageOperationCompleted);
            }
            this.InvokeAsync("deleteLanguage", new object[] {
                        languageID}, this.deleteLanguageOperationCompleted, userState);
        }
        
        private void OndeleteLanguageOperationCompleted(object arg) {
            if ((this.deleteLanguageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteLanguageCompleted(this, new deleteLanguageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/addDirector", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int addDirector(string directorName) {
            object[] results = this.Invoke("addDirector", new object[] {
                        directorName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void addDirectorAsync(string directorName) {
            this.addDirectorAsync(directorName, null);
        }
        
        /// <remarks/>
        public void addDirectorAsync(string directorName, object userState) {
            if ((this.addDirectorOperationCompleted == null)) {
                this.addDirectorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddDirectorOperationCompleted);
            }
            this.InvokeAsync("addDirector", new object[] {
                        directorName}, this.addDirectorOperationCompleted, userState);
        }
        
        private void OnaddDirectorOperationCompleted(object arg) {
            if ((this.addDirectorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addDirectorCompleted(this, new addDirectorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateDirector", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int updateDirector(string directorName, int directorID) {
            object[] results = this.Invoke("updateDirector", new object[] {
                        directorName,
                        directorID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void updateDirectorAsync(string directorName, int directorID) {
            this.updateDirectorAsync(directorName, directorID, null);
        }
        
        /// <remarks/>
        public void updateDirectorAsync(string directorName, int directorID, object userState) {
            if ((this.updateDirectorOperationCompleted == null)) {
                this.updateDirectorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateDirectorOperationCompleted);
            }
            this.InvokeAsync("updateDirector", new object[] {
                        directorName,
                        directorID}, this.updateDirectorOperationCompleted, userState);
        }
        
        private void OnupdateDirectorOperationCompleted(object arg) {
            if ((this.updateDirectorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateDirectorCompleted(this, new updateDirectorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteDirector", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int deleteDirector(int directorID) {
            object[] results = this.Invoke("deleteDirector", new object[] {
                        directorID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void deleteDirectorAsync(int directorID) {
            this.deleteDirectorAsync(directorID, null);
        }
        
        /// <remarks/>
        public void deleteDirectorAsync(int directorID, object userState) {
            if ((this.deleteDirectorOperationCompleted == null)) {
                this.deleteDirectorOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteDirectorOperationCompleted);
            }
            this.InvokeAsync("deleteDirector", new object[] {
                        directorID}, this.deleteDirectorOperationCompleted, userState);
        }
        
        private void OndeleteDirectorOperationCompleted(object arg) {
            if ((this.deleteDirectorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteDirectorCompleted(this, new deleteDirectorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PairModel {
        
        private int idField;
        
        private string nameField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void showAllMediaCompletedEventHandler(object sender, showAllMediaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class showAllMediaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal showAllMediaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void listMediaByYearCompletedEventHandler(object sender, listMediaByYearCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listMediaByYearCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listMediaByYearCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void listMediaByGenreCompletedEventHandler(object sender, listMediaByGenreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listMediaByGenreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listMediaByGenreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void listMediaByTitleCompletedEventHandler(object sender, listMediaByTitleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listMediaByTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listMediaByTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void addNewMediaCompletedEventHandler(object sender, addNewMediaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addNewMediaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addNewMediaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void updateMediaCompletedEventHandler(object sender, updateMediaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateMediaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateMediaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DeleteMediaCompletedEventHandler(object sender, DeleteMediaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteMediaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteMediaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAllGenreCompletedEventHandler(object sender, GetAllGenreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllGenreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllGenreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PairModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PairModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAllDirectorCompletedEventHandler(object sender, GetAllDirectorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllDirectorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllDirectorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PairModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PairModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAllLanguageCompletedEventHandler(object sender, GetAllLanguageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllLanguageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllLanguageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PairModel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PairModel[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void addGenreCompletedEventHandler(object sender, addGenreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addGenreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addGenreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void updateGenreCompletedEventHandler(object sender, updateGenreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateGenreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateGenreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void deleteGenreCompletedEventHandler(object sender, deleteGenreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteGenreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteGenreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void addLanguageCompletedEventHandler(object sender, addLanguageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addLanguageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addLanguageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void updateLanguageCompletedEventHandler(object sender, updateLanguageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateLanguageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateLanguageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void deleteLanguageCompletedEventHandler(object sender, deleteLanguageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteLanguageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteLanguageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void addDirectorCompletedEventHandler(object sender, addDirectorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addDirectorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addDirectorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void updateDirectorCompletedEventHandler(object sender, updateDirectorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateDirectorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateDirectorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void deleteDirectorCompletedEventHandler(object sender, deleteDirectorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteDirectorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteDirectorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591